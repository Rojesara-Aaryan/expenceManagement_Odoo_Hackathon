# Generated by Django 5.0.3 on 2025-10-04 06:09

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('companyId', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('currency', models.CharField(max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=True)),
                ('isDelete', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('userId', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('contactNo', models.CharField(max_length=15)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('manager', 'Manager'), ('employee', 'Employee')], default='employee', max_length=10)),
                ('status', models.BooleanField(default=True)),
                ('isDelete', models.BooleanField(default=False)),
                ('companyId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='MainApp.company')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='customuser_groups', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_permissions', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ExpenseCategory',
            fields=[
                ('categoryId', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('status', models.BooleanField(default=True)),
                ('isDelete', models.BooleanField(default=False)),
                ('companyId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expense_categories', to='MainApp.company')),
                ('userId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_categories', to='MainApp.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('workflowId', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('threshold_min', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('threshold_max', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('is_manager_approver', models.BooleanField(default=False)),
                ('approval_type', models.CharField(choices=[('sequential', 'Sequential'), ('percentage', 'Percentage'), ('specific', 'Specific'), ('hybrid', 'Hybrid')], default='sequential', max_length=20)),
                ('percentage_required', models.FloatField(blank=True, null=True)),
                ('isDelete', models.BooleanField(default=False)),
                ('companyId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workflows', to='MainApp.company')),
                ('specific_approver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='specific_workflows', to='MainApp.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('currency', models.CharField(max_length=3)),
                ('description', models.TextField(blank=True)),
                ('date', models.DateField()),
                ('receipt', models.FileField(blank=True, null=True, upload_to='receipts/')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('isDelete', models.BooleanField(default=False)),
                ('managerApproval', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('financeApproval', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('directorApproval', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('manager_approved_at', models.DateTimeField(blank=True, null=True)),
                ('finance_approved_at', models.DateTimeField(blank=True, null=True)),
                ('director_approved_at', models.DateTimeField(blank=True, null=True)),
                ('submitted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='MainApp.customuser')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='MainApp.expensecategory')),
                ('workflowId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='MainApp.workflow')),
            ],
        ),
        migrations.CreateModel(
            name='WorkflowApprover',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_employee_manager', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('approver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approver_roles', to='MainApp.customuser')),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approvers', to='MainApp.workflow')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
    ]
